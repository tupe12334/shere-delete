/*
//------------------------------------------------------------------------------ 
// This code was generated by Amplication. 
// 
// Changes to this file will be lost if the code is regenerated. 
//
// There are other ways to to customize your code, see this doc to learn more
// https://docs.amplication.com/docs/how-to/custom-code
//
//------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import {
  IsString,
  IsOptional,
  IsDate,
  ValidateNested,
  IsInt,
} from "class-validator";
import { ApiProperty } from "@nestjs/swagger";
import { Type } from "class-transformer";
import { Customer } from "../../customer/base/Customer";
@ObjectType()
class Address {
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  @ApiProperty({
    required: false,
    type: String,
  })
  address_1!: string | null;

  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  @ApiProperty({
    required: false,
    type: String,
  })
  address_2!: string | null;

  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  @ApiProperty({
    required: false,
    type: String,
  })
  city!: string | null;

  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  @ApiProperty({
    required: true,
  })
  createdAt!: Date;

  @ValidateNested()
  @Type(() => Customer)
  @IsOptional()
  @ApiProperty({
    required: false,
    type: () => [Customer],
  })
  customers?: Array<Customer>;

  @IsString()
  @Field(() => String)
  @ApiProperty({
    required: true,
    type: String,
  })
  id!: string;

  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  @ApiProperty({
    required: false,
    type: String,
  })
  state!: string | null;

  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  @ApiProperty({
    required: true,
  })
  updatedAt!: Date;

  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  @ApiProperty({
    required: false,
    type: Number,
  })
  zip!: number | null;
}
export { Address };
